enc-ckt has DFFs. running sequnetial attack...
dec method is: int
vebrosity: 0
key-condition sweeping mode: 2
BMC sweeping mode: 0
AIG mode : 0
Relative to kckt SAT-sweeping: 0
with propagation limit: -1
with mitter sweep: 0
BDD analysis option: 0
KC BDD size limit: 0
BMC bound limit: 600
frame: 0  stats -> variables: 42194 clauses: 105689 assignments: 0  propagations: 0
adding termination links
DIS iter: 0
  DIP clk_0 -> 00010000000011110100100000000010000011  00000000000000001111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
extending to 1
depth[1]: key-condition circuit num gates: 2887
  dis: 1 stats -> variables: 45082 clauses: 115121 assignments: 1477  propagations: 136120
frame: 1  stats -> variables: 83667 clauses: 217354 assignments: 2893  propagations: 728036
DIS iter: 1
  DIP clk_0 -> 00000000000000000000000100000000000000  00000000000000000000000000000000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
  DIP clk_1 -> 00000000000000000000000100000000000010  00000000000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
extending to 2
depth[2]: key-condition circuit num gates: 10793
  dis: 2 stats -> variables: 91572 clauses: 235504 assignments: 6360  propagations: 822235
no trace up to bound 2
increasing bmc bound to 3
termination checking up to round: 1. current BMC checked bound: 1
frame: 2  stats -> variables: 130157 clauses: 337737 assignments: 8445  propagations: 23105187
no trace up to bound 3
increasing bmc bound to 4
termination checking up to round: 2. current BMC checked bound: 2
frame: 3  stats -> variables: 168742 clauses: 439970 assignments: 8452  propagations: 34718840
no trace up to bound 4
increasing bmc bound to 5
termination checking up to round: 3. current BMC checked bound: 3
frame: 4  stats -> variables: 207327 clauses: 542203 assignments: 8463  propagations: 71741492
no trace up to bound 5
increasing bmc bound to 6
termination checking up to round: 3. current BMC checked bound: 4
frame: 5  stats -> variables: 245912 clauses: 644436 assignments: 8476  propagations: 192957239
no trace up to bound 6
increasing bmc bound to 7
termination checking up to round: 3. current BMC checked bound: 5
frame: 6  stats -> variables: 284497 clauses: 746669 assignments: 8483  propagations: 675101208
c
c Try to adapt solver strategies
c 
c Nothing extreme in this problem, continue with glucose default strategies.
c
no trace up to bound 7
increasing bmc bound to 8
termination checking up to round: 3. current BMC checked bound: 6
frame: 7  stats -> variables: 323082 clauses: 848902 assignments: 8494  propagations: 2355243651
no trace up to bound 8
increasing bmc bound to 9
termination checking up to round: 3. current BMC checked bound: 7
frame: 8  stats -> variables: 361667 clauses: 951135 assignments: 8503  propagations: 6240328479
no trace up to bound 9
increasing bmc bound to 10
termination checking up to round: 3. current BMC checked bound: 8
frame: 9  stats -> variables: 400252 clauses: 1053368 assignments: 8513  propagations: 20123770483
DIS iter: 2
  DIP clk_0 -> 00010011101010010011000011111101101001  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  DIP clk_1 -> 00000101010110110010000011100001101000  10000000000000000000000000000000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
  DIP clk_2 -> 00000001100110010100100111101110101000  00000000000000000000000000000000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
  DIP clk_3 -> 00110011101101011110100011010001011000  10000000000000000000000000000000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
  DIP clk_4 -> 00010111101000001011000001111001011001  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  DIP clk_5 -> 00011111110010001100100010011001111000  00000000000000000000000000000000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
  DIP clk_6 -> 00011111111101101101100110110000011000  00000000000000000000000000000000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
  DIP clk_7 -> 00011100101111101010100101001100101001  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  DIP clk_8 -> 00110011100100011000010011010110101001  10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  DIP clk_9 -> 00010110100011100110011100000101000001  11001110101001001100001111110110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
extending to 10
depth[10]: key-condition circuit num gates: 176019
  dis: 3 stats -> variables: 565477 clauses: 1452840 assignments: 27539  propagations: 20985540566
termination checking up to round: 3. current BMC checked bound: 8
reached combinational termination!

sat_time:  0.000000
term_time: 414.941400
gen_time:  0.000000
bmc_time:  11657.856324
simp_time: 0.000000
total_time: 12088.224764

dis_count: 3
dis_maxlen: 10

[1;31mkey=[0m[1;31m0[0m[1;31m0[0m[1;31m1[0m[1;31m1[0m[1;31m0[0m[1;31m0[0m[1;31m0[0m[1;31m0[0m[1;31m1[0m[1;31m1[0m[1;31m0[0m[1;31m0[0m[1;31m0[0m[1;31m0[0m[1;31m0[0m[1;31m0[0m[1;31m0[0m[1;31m0[0m[1;31m0[0m[1;31m0[0m[1;31m0[0m[1;31m0[0m[1;31m1[0m[1;31m1[0m[1;31m1[0m[1;31m1[0m[1;31m0[0m[1;31m0[0m[1;31m0[0m[1;31m0[0m[1;31m1[0m[1;31m1[0m[1;31m1[0m[1;31m1[0m[1;31m0[0m[1;31m0[0m[1;31m0[0m[1;31m0[0m[1;31m1[0m[1;31m1[0m[1;31m1[0m[1;31m1[0m[1;31m0[0m[1;31m0[0m[1;31m1[0m[1;31m1[0m[1;31m1[0m[1;31m1[0m[1;31m1[0m[1;31m1[0m[1;31m1[0m[1;31m1[0m[1;31m0[0m[1;31m0[0m[1;31m1[0m[1;31m1[0m[1;31m0[0m[1;31m0[0m[1;31m1[0m[1;31m1[0m[1;31m0[0m[1;31m0[0m[1;31m0[0m[1;31m0[0m[1;31m1[0m[1;31m1[0m[1;31m1[0m[1;31m1[0m[1;31m1[0m[1;31m1[0m[1;31m1[0m[1;31m1[0m[1;31m0[0m[1;31m0[0m[1;31m0[0m[1;31m0[0m
checking key

NEOS : /home/jonti/jonti_share/neos/bin/neos
UC Berkeley, ABC 1.01 (compiled Apr 22 2020 16:07:37)
abc 01> dsec ./tmp175978/cir1.bench  ./tmp175978/cir2.bench
Warning: 3456 registers in this network have don't-care init values.
The don't-care are assumed to be 0. The result may not verify.
Use command "print_latch" to see the init values of registers.
Use command "zero" to convert or "init" to change the values.
Networks are equivalent.  Time =     0.29 sec

equivalent

done
